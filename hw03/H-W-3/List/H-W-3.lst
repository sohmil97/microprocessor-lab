
AVRASM ver. 2.1.30  C:\Users\Jamshid\Desktop\Home-Work-3-LCD - Copy\List\H-W-3.asm Mon Jan 04 01:43:47 2021

C:\Users\Jamshid\Desktop\Home-Work-3-LCD - Copy\List\H-W-3.asm(1059): warning: Register r5 already defined by the .DEF directive
C:\Users\Jamshid\Desktop\Home-Work-3-LCD - Copy\List\H-W-3.asm(1060): warning: Register r4 already defined by the .DEF directive
C:\Users\Jamshid\Desktop\Home-Work-3-LCD - Copy\List\H-W-3.asm(1061): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0054 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 009a 	JMP  _timer1_capt_isr
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0084 	JMP  _timer1_ovf_isr
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x3:
00002a ffff      	.DB  0xFF,0xFF
                 _0x0:
00002b 6550
00002c 6972
00002d 646f
00002e 203a      	.DB  0x50,0x65,0x72,0x69,0x6F,0x64,0x3A,0x20
00002f 2000
000030 736d
000031 4600
000032 6572      	.DB  0x0,0x20,0x6D,0x73,0x0,0x46,0x72,0x65
000033 3a71
000034 0020
000035 4820
000036 007a      	.DB  0x71,0x3A,0x20,0x0,0x20,0x48,0x7A,0x0
                 _0x2000003:
000037 c080      	.DB  0x80,0xC0
                 _0x2020060:
C:\Users\Jamshid\Desktop\Home-Work-3-LCD - Copy\List\H-W-3.asm(1101): warning: .cseg .db misalignment - padding zero byte
000038 0001      	.DB  0x1
                 _0x2020000:
000039 4e2d
00003a 4e41
00003b 4900
00003c 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Jamshid\Desktop\Home-Work-3-LCD - Copy\List\H-W-3.asm(1104): warning: .cseg .db misalignment - padding zero byte
00003d 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00003e 0002      	.DW  0x02
00003f 0178      	.DW  _alpha_pointer_G000
000040 0054      	.DW  _0x3*2
                 
000041 0009      	.DW  0x09
000042 0160      	.DW  _0x4
000043 0056      	.DW  _0x0*2
                 
000044 0004      	.DW  0x04
000045 0169      	.DW  _0x4+9
000046 005f      	.DW  _0x0*2+9
                 
000047 0007      	.DW  0x07
000048 016d      	.DW  _0x4+13
000049 0063      	.DW  _0x0*2+13
                 
00004a 0004      	.DW  0x04
00004b 0174      	.DW  _0x4+20
00004c 006a      	.DW  _0x0*2+20
                 
00004d 0002      	.DW  0x02
00004e 017c      	.DW  __base_y_G100
00004f 006e      	.DW  _0x2000003*2
                 
000050 0001      	.DW  0x01
000051 0180      	.DW  __seed_G101
000052 0070      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000053 0000      	.DW  0
                 
                 __RESET:
000054 94f8      	CLI
000055 27ee      	CLR  R30
000056 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000057 e0f1      	LDI  R31,1
000058 bffb      	OUT  GICR,R31
000059 bfeb      	OUT  GICR,R30
00005a bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00005b e1f8      	LDI  R31,0x18
00005c bdf1      	OUT  WDTCR,R31
00005d bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00005e e08d      	LDI  R24,(14-2)+1
00005f e0a2      	LDI  R26,2
000060 27bb      	CLR  R27
                 __CLEAR_REG:
000061 93ed      	ST   X+,R30
000062 958a      	DEC  R24
000063 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000064 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000065 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000066 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000067 93ed      	ST   X+,R30
000068 9701      	SBIW R24,1
000069 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006a e7ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006c 9185      	LPM  R24,Z+
00006d 9195      	LPM  R25,Z+
00006e 9700      	SBIW R24,0
00006f f061      	BREQ __GLOBAL_INI_END
000070 91a5      	LPM  R26,Z+
000071 91b5      	LPM  R27,Z+
000072 9005      	LPM  R0,Z+
000073 9015      	LPM  R1,Z+
000074 01bf      	MOVW R22,R30
000075 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000076 9005      	LPM  R0,Z+
000077 920d      	ST   X+,R0
000078 9701      	SBIW R24,1
000079 f7e1      	BRNE __GLOBAL_INI_LOOP
00007a 01fb      	MOVW R30,R22
00007b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007d bfed      	OUT  SPL,R30
00007e e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000080 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000081 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000082 940c 012c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#asm
                   .equ __lcd_port= 0x1B;
                 ; 0000 0004 #endasm
                 ;
                 ;#include <lcd.h>
                 ;#include <stdlib.h>
                 ;#define ICP_EN PINC.0
                 ;
                 ;static int alpha_pointer = -1;
                 
                 	.DSEG
                 ;
                 ;static unsigned int timer1_counter = 0;
                 ;const unsigned long TIMER1_VALUE = 0xE0C0;
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0010 {
                 
                 	.CSEG
                 _timer1_ovf_isr:
000084 93aa      	ST   -Y,R26
000085 93ba      	ST   -Y,R27
000086 93ea      	ST   -Y,R30
000087 93fa      	ST   -Y,R31
000088 b7ef      	IN   R30,SREG
000089 93ea      	ST   -Y,R30
                 ; 0000 0011     TCNT1=TIMER1_VALUE;
00008a 940e 036e 	CALL SUBOPT_0x0
                 ; 0000 0012     ++timer1_counter;
00008c e7aa      	LDI  R26,LOW(_timer1_counter_G000)
00008d e0b1      	LDI  R27,HIGH(_timer1_counter_G000)
00008e 91ed      	LD   R30,X+
00008f 91fd      	LD   R31,X+
000090 9631      	ADIW R30,1
000091 93fe      	ST   -X,R31
000092 93ee      	ST   -X,R30
                 ; 0000 0013 }
000093 91e9      	LD   R30,Y+
000094 bfef      	OUT  SREG,R30
000095 91f9      	LD   R31,Y+
000096 91e9      	LD   R30,Y+
000097 91b9      	LD   R27,Y+
000098 91a9      	LD   R26,Y+
000099 9518      	RETI
                 ;
                 ;interrupt [TIM1_CAPT] void timer1_capt_isr(void)
                 ; 0000 0016 {
                 _timer1_capt_isr:
00009a 920a      	ST   -Y,R0
00009b 921a      	ST   -Y,R1
00009c 92fa      	ST   -Y,R15
00009d 936a      	ST   -Y,R22
00009e 937a      	ST   -Y,R23
00009f 938a      	ST   -Y,R24
0000a0 939a      	ST   -Y,R25
0000a1 93aa      	ST   -Y,R26
0000a2 93ba      	ST   -Y,R27
0000a3 93ea      	ST   -Y,R30
0000a4 93fa      	ST   -Y,R31
0000a5 b7ef      	IN   R30,SREG
0000a6 93ea      	ST   -Y,R30
                 ; 0000 0017     char str_period[10];
                 ; 0000 0018     char str_freq[10];
                 ; 0000 0019     unsigned long period;
                 ; 0000 001A     unsigned int lcr1;
                 ; 0000 001B 
                 ; 0000 001C     lcr1 = (ICR1H*256)+ICR1L;
0000a7 9768      	SBIW R28,24
0000a8 931a      	ST   -Y,R17
0000a9 930a      	ST   -Y,R16
                 ;	str_period -> Y+16
                 ;	str_freq -> Y+6
                 ;	period -> Y+2
                 ;	lcr1 -> R16,R17
0000aa b5e7      	IN   R30,0x27
0000ab 2ffe      	MOV  R31,R30
0000ac e0e0      	LDI  R30,0
0000ad 01df      	MOVW R26,R30
0000ae b5e6      	IN   R30,0x26
0000af e0f0      	LDI  R31,0
0000b0 0fea      	ADD  R30,R26
0000b1 1ffb      	ADC  R31,R27
0000b2 018f      	MOVW R16,R30
                 ; 0000 001D     period = ((unsigned long)(((float)lcr1)/((float)(0xffff-TIMER1_VALUE))))
                 ; 0000 001E             + ((unsigned long) timer1_counter) ;
0000b3 01f8      	MOVW R30,R16
0000b4 2766      	CLR  R22
0000b5 2777      	CLR  R23
0000b6 940e 0439 	CALL __CDF1
0000b8 01df      	MOVW R26,R30
0000b9 01cb      	MOVW R24,R22
                +
0000ba e0e0     +LDI R30 , LOW ( 0x45F9F800 )
0000bb eff8     +LDI R31 , HIGH ( 0x45F9F800 )
0000bc ef69     +LDI R22 , BYTE3 ( 0x45F9F800 )
0000bd e475     +LDI R23 , BYTE4 ( 0x45F9F800 )
                 	__GETD1N 0x45F9F800
0000be 940e 0511 	CALL __DIVF21
0000c0 940e 0400 	CALL __CFD1U
0000c2 01df      	MOVW R26,R30
0000c3 01cb      	MOVW R24,R22
0000c4 91e0 017a 	LDS  R30,_timer1_counter_G000
0000c6 91f0 017b 	LDS  R31,_timer1_counter_G000+1
0000c8 2766      	CLR  R22
0000c9 2777      	CLR  R23
0000ca 940e 0576 	CALL __ADDD12
0000cc 940e 0373 	CALL SUBOPT_0x1
                 ; 0000 001F 
                 ; 0000 0020 
                 ; 0000 0021     timer1_counter = 0;
0000ce e0e0      	LDI  R30,LOW(0)
0000cf 93e0 017a 	STS  _timer1_counter_G000,R30
0000d1 93e0 017b 	STS  _timer1_counter_G000+1,R30
                 ; 0000 0022     TCNT1=TIMER1_VALUE;
0000d3 940e 036e 	CALL SUBOPT_0x0
                 ; 0000 0023 
                 ; 0000 0024     itoa(period,str_period);
0000d5 81ea      	LDD  R30,Y+2
0000d6 81fb      	LDD  R31,Y+2+1
0000d7 93fa      	ST   -Y,R31
0000d8 93ea      	ST   -Y,R30
0000d9 01fe      	MOVW R30,R28
0000da 9672      	ADIW R30,18
0000db 93fa      	ST   -Y,R31
0000dc 93ea      	ST   -Y,R30
0000dd 940e 022c 	CALL _itoa
                 ; 0000 0025     ftoa(1/((float)period/1000),3,str_freq);
0000df 940e 0378 	CALL SUBOPT_0x2
0000e1 940e 0437 	CALL __CDF1U
0000e3 01df      	MOVW R26,R30
0000e4 01cb      	MOVW R24,R22
                +
0000e5 e0e0     +LDI R30 , LOW ( 0x447A0000 )
0000e6 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
0000e7 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
0000e8 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
0000e9 940e 0511 	CALL __DIVF21
                +
0000eb e0a0     +LDI R26 , LOW ( 0x3F800000 )
0000ec e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0000ed e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0000ee e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0000ef 940e 0511 	CALL __DIVF21
0000f1 940e 0592 	CALL __PUTPARD1
0000f3 e0e3      	LDI  R30,LOW(3)
0000f4 93ea      	ST   -Y,R30
0000f5 01fe      	MOVW R30,R28
0000f6 963b      	ADIW R30,11
0000f7 93fa      	ST   -Y,R31
0000f8 93ea      	ST   -Y,R30
0000f9 940e 0258 	CALL _ftoa
                 ; 0000 0026 
                 ; 0000 0027     lcd_clear();
0000fb 940e 01aa 	CALL _lcd_clear
                 ; 0000 0028     lcd_puts("Period: ");
                +
0000fd e6e0     +LDI R30 , LOW ( _0x4 + ( 0 ) )
0000fe e0f1     +LDI R31 , HIGH ( _0x4 + ( 0 ) )
                 	__POINTW1MN _0x4,0
0000ff 940e 037d 	CALL SUBOPT_0x3
                 ; 0000 0029     lcd_puts(str_period);
000101 01fe      	MOVW R30,R28
000102 9670      	ADIW R30,16
000103 940e 037d 	CALL SUBOPT_0x3
                 ; 0000 002A     lcd_puts(" ms");
                +
000105 e6e9     +LDI R30 , LOW ( _0x4 + ( 9 ) )
000106 e0f1     +LDI R31 , HIGH ( _0x4 + ( 9 ) )
                 	__POINTW1MN _0x4,9
000107 940e 037d 	CALL SUBOPT_0x3
                 ; 0000 002B     lcd_gotoxy(0,1);
000109 e0e0      	LDI  R30,LOW(0)
00010a 93ea      	ST   -Y,R30
00010b e0e1      	LDI  R30,LOW(1)
00010c 93ea      	ST   -Y,R30
00010d 940e 019a 	CALL _lcd_gotoxy
                 ; 0000 002C     lcd_puts("Freq: ");
                +
00010f e6ed     +LDI R30 , LOW ( _0x4 + ( 13 ) )
000110 e0f1     +LDI R31 , HIGH ( _0x4 + ( 13 ) )
                 	__POINTW1MN _0x4,13
000111 940e 037d 	CALL SUBOPT_0x3
                 ; 0000 002D     lcd_puts(str_freq);
000113 01fe      	MOVW R30,R28
000114 9636      	ADIW R30,6
000115 940e 037d 	CALL SUBOPT_0x3
                 ; 0000 002E     lcd_puts(" Hz");
                +
000117 e7e4     +LDI R30 , LOW ( _0x4 + ( 20 ) )
000118 e0f1     +LDI R31 , HIGH ( _0x4 + ( 20 ) )
                 	__POINTW1MN _0x4,20
000119 940e 037d 	CALL SUBOPT_0x3
                 ; 0000 002F }
00011b 8119      	LDD  R17,Y+1
00011c 8108      	LDD  R16,Y+0
00011d 966a      	ADIW R28,26
00011e 91e9      	LD   R30,Y+
00011f bfef      	OUT  SREG,R30
000120 91f9      	LD   R31,Y+
000121 91e9      	LD   R30,Y+
000122 91b9      	LD   R27,Y+
000123 91a9      	LD   R26,Y+
000124 9199      	LD   R25,Y+
000125 9189      	LD   R24,Y+
000126 9179      	LD   R23,Y+
000127 9169      	LD   R22,Y+
000128 90f9      	LD   R15,Y+
000129 9019      	LD   R1,Y+
00012a 9009      	LD   R0,Y+
00012b 9518      	RETI
                 
                 	.DSEG
                 _0x4:
000160           	.BYTE 0x18
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0033 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0034 
                 ; 0000 0035 DDRA= 0xFF;
00012c efef      	LDI  R30,LOW(255)
00012d bbea      	OUT  0x1A,R30
                 ; 0000 0036 DDRC= 0xF0;
00012e efe0      	LDI  R30,LOW(240)
00012f bbe4      	OUT  0x14,R30
                 ; 0000 0037 PORTC.7 = 0;
000130 98af      	CBI  0x15,7
                 ; 0000 0038 
                 ; 0000 0039 TCCR1A= 0;
000131 e0e0      	LDI  R30,LOW(0)
000132 bdef      	OUT  0x2F,R30
                 ; 0000 003A TCCR1B=(1<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
000133 e8e1      	LDI  R30,LOW(129)
000134 bdee      	OUT  0x2E,R30
                 ; 0000 003B TCNT1=TIMER1_VALUE;
000135 940e 036e 	CALL SUBOPT_0x0
                 ; 0000 003C ICR1H=0x00;
000137 e0e0      	LDI  R30,LOW(0)
000138 bde7      	OUT  0x27,R30
                 ; 0000 003D ICR1L=0x00;
000139 bde6      	OUT  0x26,R30
                 ; 0000 003E 
                 ; 0000 003F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (1<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
00013a e2e5      	LDI  R30,LOW(37)
00013b bfe9      	OUT  0x39,R30
                 ; 0000 0040 
                 ; 0000 0041 lcd_init(16);
00013c e1e0      	LDI  R30,LOW(16)
00013d 93ea      	ST   -Y,R30
00013e 940e 01f8 	CALL _lcd_init
                 ; 0000 0042 
                 ; 0000 0043 #asm("sei");
000140 9478      	sei
                 ; 0000 0044 
                 ; 0000 0045 while (1){
                 _0x7:
                 ; 0000 0046  if (ICP_EN){
000141 9b98      	SBIS 0x13,0
000142 c00d      	RJMP _0xA
                 ; 0000 0047      TIMSK |= (1<<TICIE1) | (1<<TOIE1);
000143 b7e9      	IN   R30,0x39
000144 62e4      	ORI  R30,LOW(0x24)
000145 bfe9      	OUT  0x39,R30
                 ; 0000 0048      TIMSK &= ~(1<<TOIE0);
000146 b7e9      	IN   R30,0x39
000147 7fee      	ANDI R30,0xFE
000148 bfe9      	OUT  0x39,R30
                 ; 0000 0049      alpha_pointer = -1;
000149 efef      	LDI  R30,LOW(65535)
00014a efff      	LDI  R31,HIGH(65535)
00014b 93e0 0178 	STS  _alpha_pointer_G000,R30
00014d 93f0 0179 	STS  _alpha_pointer_G000+1,R31
                 ; 0000 004A  } else {
00014f c009      	RJMP _0xB
                 _0xA:
                 ; 0000 004B      TIMSK &= ~(1<<TICIE1);
000150 b7e9      	IN   R30,0x39
000151 7def      	ANDI R30,0xDF
000152 bfe9      	OUT  0x39,R30
                 ; 0000 004C      TIMSK &= ~(1<<TOIE1);
000153 b7e9      	IN   R30,0x39
000154 7feb      	ANDI R30,0xFB
000155 bfe9      	OUT  0x39,R30
                 ; 0000 004D      TIMSK |= (1<<TOIE0);
000156 b7e9      	IN   R30,0x39
000157 60e1      	ORI  R30,1
000158 bfe9      	OUT  0x39,R30
                 ; 0000 004E  }
                 _0xB:
                 ; 0000 004F }
000159 cfe7      	RJMP _0x7
                 ; 0000 0050 }
                 _0xC:
00015a cfff      	RJMP _0xC
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G100:
00015b e0ff          ldi   r31,15
                 __lcd_delay0:
00015c 95fa          dec   r31
00015d f7f1          brne  __lcd_delay0
00015e 9508      	RET
                 __lcd_ready:
00015f b3aa          in    r26,__lcd_direction
000160 70af          andi  r26,0xf                 ;set as input
000161 bbaa          out   __lcd_direction,r26
000162 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000163 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
000164 dff6      	RCALL __lcd_delay_G100
000165 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000166 dff4      	RCALL __lcd_delay_G100
000167 b3a9          in    r26,__lcd_pin
000168 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000169 dff1      	RCALL __lcd_delay_G100
00016a 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
00016b dfef      	RCALL __lcd_delay_G100
00016c 98da          cbi   __lcd_port,__lcd_enable ;EN=0
00016d fda7          sbrc  r26,__lcd_busy_flag
00016e cff5          rjmp  __lcd_busy
00016f 9508      	RET
                 __lcd_write_nibble_G100:
000170 7fa0          andi  r26,0xf0
000171 2bab          or    r26,r27
000172 bbab          out   __lcd_port,r26          ;write
000173 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000174 940e 015b 	CALL __lcd_delay_G100
000176 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000177 940e 015b 	CALL __lcd_delay_G100
000179 9508      	RET
                 __lcd_write_data:
00017a 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00017b b3aa          in    r26,__lcd_direction
00017c 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
00017d bbaa          out   __lcd_direction,r26
00017e b3bb          in    r27,__lcd_port
00017f 70bf          andi  r27,0xf
000180 81a8          ld    r26,y
000181 dfee      	RCALL __lcd_write_nibble_G100
000182 81a8          ld    r26,y
000183 95a2          swap  r26
000184 dfeb      	RCALL __lcd_write_nibble_G100
000185 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000186 940c 022a 	JMP  _0x20A0004
                 __lcd_read_nibble_G100:
000188 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000189 940e 015b 	CALL __lcd_delay_G100
00018b b3e9          in    r30,__lcd_pin           ;read
00018c 98da          cbi   __lcd_port,__lcd_enable ;EN=0
00018d 940e 015b 	CALL __lcd_delay_G100
00018f 7fe0          andi  r30,0xf0
000190 9508      	RET
                 _lcd_read_byte0_G100:
000191 940e 015b 	CALL __lcd_delay_G100
000193 dff4      	RCALL __lcd_read_nibble_G100
000194 2fae          mov   r26,r30
000195 dff2      	RCALL __lcd_read_nibble_G100
000196 98d9          cbi   __lcd_port,__lcd_rd     ;RD=0
000197 95e2          swap  r30
000198 2bea          or    r30,r26
000199 9508      	RET
                 _lcd_gotoxy:
00019a 940e 015f 	CALL __lcd_ready
00019c 81e8      	LD   R30,Y
00019d e0f0      	LDI  R31,0
00019e 58e4      	SUBI R30,LOW(-__base_y_G100)
00019f 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0001a0 81e0      	LD   R30,Z
0001a1 81a9      	LDD  R26,Y+1
0001a2 0fea      	ADD  R30,R26
0001a3 93ea      	ST   -Y,R30
0001a4 940e 017a 	CALL __lcd_write_data
0001a6 8059      	LDD  R5,Y+1
0001a7 8048      	LDD  R4,Y+0
0001a8 9622      	ADIW R28,2
0001a9 9508      	RET
                 _lcd_clear:
0001aa 940e 015f 	CALL __lcd_ready
0001ac e0e2      	LDI  R30,LOW(2)
0001ad 93ea      	ST   -Y,R30
0001ae 940e 017a 	CALL __lcd_write_data
0001b0 940e 015f 	CALL __lcd_ready
0001b2 e0ec      	LDI  R30,LOW(12)
0001b3 93ea      	ST   -Y,R30
0001b4 940e 017a 	CALL __lcd_write_data
0001b6 940e 015f 	CALL __lcd_ready
0001b8 e0e1      	LDI  R30,LOW(1)
0001b9 93ea      	ST   -Y,R30
0001ba 940e 017a 	CALL __lcd_write_data
0001bc e0e0      	LDI  R30,LOW(0)
0001bd 2e4e      	MOV  R4,R30
0001be 2e5e      	MOV  R5,R30
0001bf 9508      	RET
                 _lcd_putchar:
0001c0 93ef          push r30
0001c1 93ff          push r31
0001c2 81a8          ld   r26,y
0001c3 9468          set
0001c4 30aa          cpi  r26,10
0001c5 f019          breq __lcd_putchar1
0001c6 94e8          clt
0001c7 1457      	CP   R5,R7
0001c8 f030      	BRLO _0x2000004
                 	__lcd_putchar1:
0001c9 9443      	INC  R4
0001ca e0e0      	LDI  R30,LOW(0)
0001cb 93ea      	ST   -Y,R30
0001cc 924a      	ST   -Y,R4
0001cd dfcc      	RCALL _lcd_gotoxy
0001ce f036      	brts __lcd_putchar0
                 _0x2000004:
0001cf 9453      	INC  R5
0001d0 df8e          rcall __lcd_ready
0001d1 9ad8          sbi  __lcd_port,__lcd_rs ;RS=1
0001d2 81a8          ld   r26,y
0001d3 93aa          st   -y,r26
0001d4 dfa5          rcall __lcd_write_data
                 __lcd_putchar0:
0001d5 91ff          pop  r31
0001d6 91ef          pop  r30
0001d7 940c 022a 	JMP  _0x20A0004
                 _lcd_puts:
0001d9 931a      	ST   -Y,R17
                 _0x2000005:
0001da 81a9      	LDD  R26,Y+1
0001db 81ba      	LDD  R27,Y+1+1
0001dc 91ed      	LD   R30,X+
0001dd 83a9      	STD  Y+1,R26
0001de 83ba      	STD  Y+1+1,R27
0001df 2f1e      	MOV  R17,R30
0001e0 30e0      	CPI  R30,0
0001e1 f019      	BREQ _0x2000007
0001e2 931a      	ST   -Y,R17
0001e3 dfdc      	RCALL _lcd_putchar
0001e4 cff5      	RJMP _0x2000005
                 _0x2000007:
0001e5 8118      	LDD  R17,Y+0
0001e6 9623      	ADIW R28,3
0001e7 9508      	RET
                 __long_delay_G100:
0001e8 27aa          clr   r26
0001e9 27bb          clr   r27
                 __long_delay0:
0001ea 9711          sbiw  r26,1         ;2 cycles
0001eb f7f1          brne  __long_delay0 ;2 cycles
0001ec 9508      	RET
                 __lcd_init_write_G100:
0001ed 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0001ee b3aa          in    r26,__lcd_direction
0001ef 6fa7          ori   r26,0xf7                ;set as output
0001f0 bbaa          out   __lcd_direction,r26
0001f1 b3bb          in    r27,__lcd_port
0001f2 70bf          andi  r27,0xf
0001f3 81a8          ld    r26,y
0001f4 940e 0170 	CALL __lcd_write_nibble_G100
0001f6 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
0001f7 c032      	RJMP _0x20A0004
                 _lcd_init:
0001f8 98da          cbi   __lcd_port,__lcd_enable ;EN=0
0001f9 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
0001fa 8078      	LDD  R7,Y+0
0001fb 81e8      	LD   R30,Y
0001fc 58e0      	SUBI R30,-LOW(128)
                +
0001fd 93e0 017e+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001ff 81e8      	LD   R30,Y
000200 54e0      	SUBI R30,-LOW(192)
                +
000201 93e0 017f+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000203 940e 0381 	CALL SUBOPT_0x4
000205 940e 0381 	CALL SUBOPT_0x4
000207 940e 0381 	CALL SUBOPT_0x4
000209 dfde      	RCALL __long_delay_G100
00020a e2e0      	LDI  R30,LOW(32)
00020b 93ea      	ST   -Y,R30
00020c dfe0      	RCALL __lcd_init_write_G100
00020d dfda      	RCALL __long_delay_G100
00020e e2e8      	LDI  R30,LOW(40)
00020f 940e 0387 	CALL SUBOPT_0x5
000211 e0e4      	LDI  R30,LOW(4)
000212 940e 0387 	CALL SUBOPT_0x5
000214 e8e5      	LDI  R30,LOW(133)
000215 940e 0387 	CALL SUBOPT_0x5
000217 b3aa          in    r26,__lcd_direction
000218 70af          andi  r26,0xf                 ;set as input
000219 bbaa          out   __lcd_direction,r26
00021a 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
00021b 940e 0191 	CALL _lcd_read_byte0_G100
00021d 30e5      	CPI  R30,LOW(0x5)
00021e f011      	BREQ _0x200000B
00021f e0e0      	LDI  R30,LOW(0)
000220 c009      	RJMP _0x20A0004
                 _0x200000B:
000221 940e 015f 	CALL __lcd_ready
000223 e0e6      	LDI  R30,LOW(6)
000224 93ea      	ST   -Y,R30
000225 940e 017a 	CALL __lcd_write_data
000227 940e 01aa 	CALL _lcd_clear
000229 e0e1      	LDI  R30,LOW(1)
                 _0x20A0004:
00022a 9621      	ADIW R28,1
00022b 9508      	RET
                 
                 	.CSEG
                 _itoa:
00022c 91a9          ld   r26,y+
00022d 91b9          ld   r27,y+
00022e 91e9          ld   r30,y+
00022f 91f9          ld   r31,y+
000230 9630          adiw r30,0
000231 f42a          brpl __itoa0
000232 95e0          com  r30
000233 95f0          com  r31
000234 9631          adiw r30,1
000235 e26d          ldi  r22,'-'
000236 936d          st   x+,r22
                 __itoa0:
000237 94e8          clt
000238 e180          ldi  r24,low(10000)
000239 e297          ldi  r25,high(10000)
00023a d00d          rcall __itoa1
00023b ee88          ldi  r24,low(1000)
00023c e093          ldi  r25,high(1000)
00023d d00a          rcall __itoa1
00023e e684          ldi  r24,100
00023f 2799          clr  r25
000240 d007          rcall __itoa1
000241 e08a          ldi  r24,10
000242 d005          rcall __itoa1
000243 2f6e          mov  r22,r30
000244 d010          rcall __itoa5
000245 2766          clr  r22
000246 936c          st   x,r22
000247 9508          ret
                 
                 __itoa1:
000248 2766          clr	 r22
                 __itoa2:
000249 17e8          cp   r30,r24
00024a 07f9          cpc  r31,r25
00024b f020          brlo __itoa3
00024c 9563          inc  r22
00024d 1be8          sub  r30,r24
00024e 0bf9          sbc  r31,r25
00024f f7c9          brne __itoa2
                 __itoa3:
000250 2366          tst  r22
000251 f411          brne __itoa4
000252 f016          brts __itoa5
000253 9508          ret
                 __itoa4:
000254 9468          set
                 __itoa5:
000255 5d60          subi r22,-0x30
000256 936d          st   x+,r22
000257 9508          ret
                 _ftoa:
000258 9724      	SBIW R28,4
000259 e0e0      	LDI  R30,LOW(0)
00025a 83e8      	ST   Y,R30
00025b 83e9      	STD  Y+1,R30
00025c 83ea      	STD  Y+2,R30
00025d e3ef      	LDI  R30,LOW(63)
00025e 83eb      	STD  Y+3,R30
00025f 931a      	ST   -Y,R17
000260 930a      	ST   -Y,R16
000261 85eb      	LDD  R30,Y+11
000262 85fc      	LDD  R31,Y+11+1
000263 3fef      	CPI  R30,LOW(0xFFFF)
000264 efaf      	LDI  R26,HIGH(0xFFFF)
000265 07fa      	CPC  R31,R26
000266 f439      	BRNE _0x202000D
000267 940e 038c 	CALL SUBOPT_0x6
                +
000269 e7e2     +LDI R30 , LOW ( 2 * _0x2020000 + ( 0 ) )
00026a e0f0     +LDI R31 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW1FN _0x2020000,0
00026b 940e 0391 	CALL SUBOPT_0x7
00026d c0ab      	RJMP _0x20A0003
                 _0x202000D:
00026e 3fef      	CPI  R30,LOW(0x7FFF)
00026f e7af      	LDI  R26,HIGH(0x7FFF)
000270 07fa      	CPC  R31,R26
000271 f439      	BRNE _0x202000C
000272 940e 038c 	CALL SUBOPT_0x6
                +
000274 e7e3     +LDI R30 , LOW ( 2 * _0x2020000 + ( 1 ) )
000275 e0f0     +LDI R31 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW1FN _0x2020000,1
000276 940e 0391 	CALL SUBOPT_0x7
000278 c0a0      	RJMP _0x20A0003
                 _0x202000C:
000279 85ac      	LDD  R26,Y+12
00027a 23aa      	TST  R26
00027b f462      	BRPL _0x202000F
                +
00027c 85e9     +LDD R30 , Y + 9
00027d 85fa     +LDD R31 , Y + 9 + 1
00027e 856b     +LDD R22 , Y + 9 + 2
00027f 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000280 940e 03cd 	CALL __ANEGF1
000282 940e 0395 	CALL SUBOPT_0x8
000284 940e 039a 	CALL SUBOPT_0x9
000286 e2ed      	LDI  R30,LOW(45)
000287 93ec      	ST   X,R30
                 _0x202000F:
000288 85a8      	LDD  R26,Y+8
000289 30a7      	CPI  R26,LOW(0x7)
00028a f010      	BRLO _0x2020010
00028b e0e6      	LDI  R30,LOW(6)
00028c 87e8      	STD  Y+8,R30
                 _0x2020010:
00028d 8518      	LDD  R17,Y+8
                 _0x2020011:
00028e 2fe1      	MOV  R30,R17
00028f 5011      	SUBI R17,1
000290 30e0      	CPI  R30,0
000291 f039      	BREQ _0x2020013
000292 940e 03a1 	CALL SUBOPT_0xA
000294 940e 03a6 	CALL SUBOPT_0xB
000296 940e 0373 	CALL SUBOPT_0x1
000298 cff5      	RJMP _0x2020011
                 _0x2020013:
000299 940e 03ad 	CALL SUBOPT_0xC
00029b 940e 0473 	CALL __ADDF12
00029d 940e 0395 	CALL SUBOPT_0x8
00029f e010      	LDI  R17,LOW(0)
                +
0002a0 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0002a1 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0002a2 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0002a3 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0002a4 940e 0373 	CALL SUBOPT_0x1
                 _0x2020014:
0002a6 940e 03ad 	CALL SUBOPT_0xC
0002a8 940e 0556 	CALL __CMPF12
0002aa f088      	BRLO _0x2020016
0002ab 940e 03a1 	CALL SUBOPT_0xA
0002ad 940e 03b3 	CALL SUBOPT_0xD
0002af 940e 0373 	CALL SUBOPT_0x1
0002b1 5f1f      	SUBI R17,-LOW(1)
0002b2 3217      	CPI  R17,39
0002b3 f038      	BRLO _0x2020017
0002b4 940e 038c 	CALL SUBOPT_0x6
                +
0002b6 e7e7     +LDI R30 , LOW ( 2 * _0x2020000 + ( 5 ) )
0002b7 e0f0     +LDI R31 , HIGH ( 2 * _0x2020000 + ( 5 ) )
                 	__POINTW1FN _0x2020000,5
0002b8 940e 0391 	CALL SUBOPT_0x7
0002ba c05e      	RJMP _0x20A0003
                 _0x2020017:
0002bb cfea      	RJMP _0x2020014
                 _0x2020016:
0002bc 3010      	CPI  R17,0
0002bd f429      	BRNE _0x2020018
0002be 940e 039a 	CALL SUBOPT_0x9
0002c0 e3e0      	LDI  R30,LOW(48)
0002c1 93ec      	ST   X,R30
0002c2 c02c      	RJMP _0x2020019
                 _0x2020018:
                 _0x202001A:
0002c3 2fe1      	MOV  R30,R17
0002c4 5011      	SUBI R17,1
0002c5 30e0      	CPI  R30,0
0002c6 f141      	BREQ _0x202001C
0002c7 940e 03a1 	CALL SUBOPT_0xA
0002c9 940e 03a6 	CALL SUBOPT_0xB
                +
0002cb e0a0     +LDI R26 , LOW ( 0x3F000000 )
0002cc e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0002cd e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0002ce e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0002cf 940e 0473 	CALL __ADDF12
0002d1 940e 0592 	CALL __PUTPARD1
0002d3 940e 034c 	CALL _floor
0002d5 940e 0373 	CALL SUBOPT_0x1
0002d7 940e 03ad 	CALL SUBOPT_0xC
0002d9 940e 0511 	CALL __DIVF21
0002db 940e 0400 	CALL __CFD1U
0002dd 2f0e      	MOV  R16,R30
0002de 940e 039a 	CALL SUBOPT_0x9
0002e0 940e 03ba 	CALL SUBOPT_0xE
0002e2 940e 03a1 	CALL SUBOPT_0xA
0002e4 940e 0583 	CALL __CWD1
0002e6 940e 0439 	CALL __CDF1
0002e8 940e 04c3 	CALL __MULF12
0002ea 940e 03c0 	CALL SUBOPT_0xF
0002ec 940e 03c5 	CALL SUBOPT_0x10
0002ee cfd4      	RJMP _0x202001A
                 _0x202001C:
                 _0x2020019:
0002ef 85e8      	LDD  R30,Y+8
0002f0 30e0      	CPI  R30,0
0002f1 f119      	BREQ _0x20A0002
0002f2 940e 039a 	CALL SUBOPT_0x9
0002f4 e2ee      	LDI  R30,LOW(46)
0002f5 93ec      	ST   X,R30
                 _0x202001E:
0002f6 85e8      	LDD  R30,Y+8
0002f7 50e1      	SUBI R30,LOW(1)
0002f8 87e8      	STD  Y+8,R30
0002f9 5fef      	SUBI R30,-LOW(1)
0002fa f0d1      	BREQ _0x2020020
0002fb 940e 03c0 	CALL SUBOPT_0xF
0002fd 940e 03b3 	CALL SUBOPT_0xD
0002ff 940e 0395 	CALL SUBOPT_0x8
                +
000301 85e9     +LDD R30 , Y + 9
000302 85fa     +LDD R31 , Y + 9 + 1
000303 856b     +LDD R22 , Y + 9 + 2
000304 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000305 940e 0400 	CALL __CFD1U
000307 2f0e      	MOV  R16,R30
000308 940e 039a 	CALL SUBOPT_0x9
00030a 940e 03ba 	CALL SUBOPT_0xE
00030c 940e 03c0 	CALL SUBOPT_0xF
00030e 940e 0583 	CALL __CWD1
000310 940e 0439 	CALL __CDF1
000312 940e 03c5 	CALL SUBOPT_0x10
000314 cfe1      	RJMP _0x202001E
                 _0x2020020:
                 _0x20A0002:
000315 81ae      	LDD  R26,Y+6
000316 81bf      	LDD  R27,Y+6+1
000317 e0e0      	LDI  R30,LOW(0)
000318 93ec      	ST   X,R30
                 _0x20A0003:
000319 8119      	LDD  R17,Y+1
00031a 8108      	LDD  R16,Y+0
00031b 962d      	ADIW R28,13
00031c 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
00031d 817b         ldd  r23,y+3
00031e 816a         ldd  r22,y+2
00031f 81f9         ldd  r31,y+1
000320 81e8         ld   r30,y
000321 fb77         bst  r23,7
000322 0f77         lsl  r23
000323 fd67         sbrc r22,7
000324 6071         sbr  r23,1
000325 2f97         mov  r25,r23
000326 579e         subi r25,0x7e
000327 f081         breq __ftrunc0
000328 f078         brcs __ftrunc0
000329 3198         cpi  r25,24
00032a f490         brsh __ftrunc1
00032b 27aa         clr  r26
00032c 27bb         clr  r27
00032d 2788         clr  r24
                 __ftrunc2:
00032e 9408         sec
00032f 9587         ror  r24
000330 95b7         ror  r27
000331 95a7         ror  r26
000332 959a         dec  r25
000333 f7d1         brne __ftrunc2
000334 23ea         and  r30,r26
000335 23fb         and  r31,r27
000336 2368         and  r22,r24
000337 c005         rjmp __ftrunc1
                 __ftrunc0:
000338 94e8         clt
000339 2777         clr  r23
00033a 27ee         clr  r30
00033b 27ff         clr  r31
00033c 2766         clr  r22
                 __ftrunc1:
00033d 776f         cbr  r22,0x80
00033e 9576         lsr  r23
00033f f408         brcc __ftrunc3
000340 6860         sbr  r22,0x80
                 __ftrunc3:
000341 f977         bld  r23,7
000342 91a9         ld   r26,y+
000343 91b9         ld   r27,y+
000344 9189         ld   r24,y+
000345 9199         ld   r25,y+
000346 17ea         cp   r30,r26
000347 07fb         cpc  r31,r27
000348 0768         cpc  r22,r24
000349 0779         cpc  r23,r25
00034a fb97         bst  r25,7
00034b 9508         ret
                 _floor:
00034c 940e 03ca 	CALL SUBOPT_0x11
00034e 940e 0592 	CALL __PUTPARD1
000350 940e 031d 	CALL _ftrunc
000352 940e 058d 	CALL __PUTD1S0
000354 f419          brne __floor1
                 __floor0:
000355 940e 03ca 	CALL SUBOPT_0x11
000357 c009      	RJMP _0x20A0001
                 __floor1:
000358 f7e6          brtc __floor0
000359 940e 03ca 	CALL SUBOPT_0x11
                +
00035b e0a0     +LDI R26 , LOW ( 0x3F800000 )
00035c e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00035d e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00035e e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00035f 940e 046c 	CALL __SUBF12
                 _0x20A0001:
000361 9624      	ADIW R28,4
000362 9508      	RET
                 
                 	.CSEG
                 _strcpyf:
000363 91e9          ld   r30,y+
000364 91f9          ld   r31,y+
000365 91a9          ld   r26,y+
000366 91b9          ld   r27,y+
000367 01cd          movw r24,r26
                 strcpyf0:
000368 9005      	lpm  r0,z+
000369 920d          st   x+,r0
00036a 2000          tst  r0
00036b f7e1          brne strcpyf0
00036c 01fc          movw r30,r24
00036d 9508          ret
                 
                 	.DSEG
                 _alpha_pointer_G000:
000178           	.BYTE 0x2
                 _timer1_counter_G000:
00017a           	.BYTE 0x2
                 __base_y_G100:
00017c           	.BYTE 0x4
                 __seed_G101:
000180           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00036e ece0      	LDI  R30,LOW(57536)
00036f eef0      	LDI  R31,HIGH(57536)
000370 bdfd      	OUT  0x2C+1,R31
000371 bdec      	OUT  0x2C,R30
000372 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
                +
000373 83ea     +STD Y + 2 , R30
000374 83fb     +STD Y + 2 + 1 , R31
000375 836c     +STD Y + 2 + 2 , R22
000376 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000377 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
                +
000378 81ea     +LDD R30 , Y + 2
000379 81fb     +LDD R31 , Y + 2 + 1
00037a 816c     +LDD R22 , Y + 2 + 2
00037b 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00037c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
00037d 93fa      	ST   -Y,R31
00037e 93ea      	ST   -Y,R30
00037f 940c 01d9 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
000381 940e 01e8 	CALL __long_delay_G100
000383 e3e0      	LDI  R30,LOW(48)
000384 93ea      	ST   -Y,R30
000385 940c 01ed 	JMP  __lcd_init_write_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
000387 93ea      	ST   -Y,R30
000388 940e 017a 	CALL __lcd_write_data
00038a 940c 01e8 	JMP  __long_delay_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
00038c 81ee      	LDD  R30,Y+6
00038d 81ff      	LDD  R31,Y+6+1
00038e 93fa      	ST   -Y,R31
00038f 93ea      	ST   -Y,R30
000390 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000391 93fa      	ST   -Y,R31
000392 93ea      	ST   -Y,R30
000393 940c 0363 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
                +
000395 87e9     +STD Y + 9 , R30
000396 87fa     +STD Y + 9 + 1 , R31
000397 876b     +STD Y + 9 + 2 , R22
000398 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000399 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9:
00039a 81ae      	LDD  R26,Y+6
00039b 81bf      	LDD  R27,Y+6+1
00039c 9611      	ADIW R26,1
00039d 83ae      	STD  Y+6,R26
00039e 83bf      	STD  Y+6+1,R27
00039f 9711      	SBIW R26,1
0003a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
                +
0003a1 81aa     +LDD R26 , Y + 2
0003a2 81bb     +LDD R27 , Y + 2 + 1
0003a3 818c     +LDD R24 , Y + 2 + 2
0003a4 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0003a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
0003a6 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0003a7 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0003a8 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0003a9 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0003aa 940e 04c3 	CALL __MULF12
0003ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
0003ad dfca      	RCALL SUBOPT_0x2
                +
0003ae 85a9     +LDD R26 , Y + 9
0003af 85ba     +LDD R27 , Y + 9 + 1
0003b0 858b     +LDD R24 , Y + 9 + 2
0003b1 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0003b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
                +
0003b3 e0e0     +LDI R30 , LOW ( 0x41200000 )
0003b4 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0003b5 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0003b6 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0003b7 940e 04c3 	CALL __MULF12
0003b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
0003ba 2fe0      	MOV  R30,R16
0003bb 5de0      	SUBI R30,-LOW(48)
0003bc 93ec      	ST   X,R30
0003bd 2fe0      	MOV  R30,R16
0003be e0f0      	LDI  R31,0
0003bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
                +
0003c0 85a9     +LDD R26 , Y + 9
0003c1 85ba     +LDD R27 , Y + 9 + 1
0003c2 858b     +LDD R24 , Y + 9 + 2
0003c3 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0003c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0003c5 940e 0597 	CALL __SWAPD12
0003c7 940e 046c 	CALL __SUBF12
0003c9 cfcb      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
0003ca 940e 0588 	CALL __GETD1S0
0003cc 9508      	RET
                 
                 
                 	.CSEG
                 __ANEGF1:
0003cd 9730      	SBIW R30,0
0003ce 4060      	SBCI R22,0
0003cf 4070      	SBCI R23,0
0003d0 f009      	BREQ __ANEGF10
0003d1 5870      	SUBI R23,0x80
                 __ANEGF10:
0003d2 9508      	RET
                 
                 __ROUND_REPACK:
0003d3 2355      	TST  R21
0003d4 f442      	BRPL __REPACK
0003d5 3850      	CPI  R21,0x80
0003d6 f411      	BRNE __ROUND_REPACK0
0003d7 ffe0      	SBRS R30,0
0003d8 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0003d9 9631      	ADIW R30,1
0003da 1f69      	ADC  R22,R25
0003db 1f79      	ADC  R23,R25
0003dc f06b      	BRVS __REPACK1
                 
                 __REPACK:
0003dd e850      	LDI  R21,0x80
0003de 2757      	EOR  R21,R23
0003df f411      	BRNE __REPACK0
0003e0 935f      	PUSH R21
0003e1 c0cf      	RJMP __ZERORES
                 __REPACK0:
0003e2 3f5f      	CPI  R21,0xFF
0003e3 f031      	BREQ __REPACK1
0003e4 0f66      	LSL  R22
0003e5 0c00      	LSL  R0
0003e6 9557      	ROR  R21
0003e7 9567      	ROR  R22
0003e8 2f75      	MOV  R23,R21
0003e9 9508      	RET
                 __REPACK1:
0003ea 935f      	PUSH R21
0003eb 2000      	TST  R0
0003ec f00a      	BRMI __REPACK2
0003ed c0cf      	RJMP __MAXRES
                 __REPACK2:
0003ee c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0003ef e850      	LDI  R21,0x80
0003f0 2e19      	MOV  R1,R25
0003f1 2215      	AND  R1,R21
0003f2 0f88      	LSL  R24
0003f3 1f99      	ROL  R25
0003f4 2795      	EOR  R25,R21
0003f5 0f55      	LSL  R21
0003f6 9587      	ROR  R24
                 
                 __UNPACK1:
0003f7 e850      	LDI  R21,0x80
0003f8 2e07      	MOV  R0,R23
0003f9 2205      	AND  R0,R21
0003fa 0f66      	LSL  R22
0003fb 1f77      	ROL  R23
0003fc 2775      	EOR  R23,R21
0003fd 0f55      	LSL  R21
0003fe 9567      	ROR  R22
0003ff 9508      	RET
                 
                 __CFD1U:
000400 9468      	SET
000401 c001      	RJMP __CFD1U0
                 __CFD1:
000402 94e8      	CLT
                 __CFD1U0:
000403 935f      	PUSH R21
000404 dff2      	RCALL __UNPACK1
000405 3870      	CPI  R23,0x80
000406 f018      	BRLO __CFD10
000407 3f7f      	CPI  R23,0xFF
000408 f408      	BRCC __CFD10
000409 c0a7      	RJMP __ZERORES
                 __CFD10:
00040a e156      	LDI  R21,22
00040b 1b57      	SUB  R21,R23
00040c f4aa      	BRPL __CFD11
00040d 9551      	NEG  R21
00040e 3058      	CPI  R21,8
00040f f40e      	BRTC __CFD19
000410 3059      	CPI  R21,9
                 __CFD19:
000411 f030      	BRLO __CFD17
000412 efef      	SER  R30
000413 efff      	SER  R31
000414 ef6f      	SER  R22
000415 e77f      	LDI  R23,0x7F
000416 f977      	BLD  R23,7
000417 c01a      	RJMP __CFD15
                 __CFD17:
000418 2777      	CLR  R23
000419 2355      	TST  R21
00041a f0b9      	BREQ __CFD15
                 __CFD18:
00041b 0fee      	LSL  R30
00041c 1fff      	ROL  R31
00041d 1f66      	ROL  R22
00041e 1f77      	ROL  R23
00041f 955a      	DEC  R21
000420 f7d1      	BRNE __CFD18
000421 c010      	RJMP __CFD15
                 __CFD11:
000422 2777      	CLR  R23
                 __CFD12:
000423 3058      	CPI  R21,8
000424 f028      	BRLO __CFD13
000425 2fef      	MOV  R30,R31
000426 2ff6      	MOV  R31,R22
000427 2f67      	MOV  R22,R23
000428 5058      	SUBI R21,8
000429 cff9      	RJMP __CFD12
                 __CFD13:
00042a 2355      	TST  R21
00042b f031      	BREQ __CFD15
                 __CFD14:
00042c 9576      	LSR  R23
00042d 9567      	ROR  R22
00042e 95f7      	ROR  R31
00042f 95e7      	ROR  R30
000430 955a      	DEC  R21
000431 f7d1      	BRNE __CFD14
                 __CFD15:
000432 2000      	TST  R0
000433 f40a      	BRPL __CFD16
000434 d146      	RCALL __ANEGD1
                 __CFD16:
000435 915f      	POP  R21
000436 9508      	RET
                 
                 __CDF1U:
000437 9468      	SET
000438 c001      	RJMP __CDF1U0
                 __CDF1:
000439 94e8      	CLT
                 __CDF1U0:
00043a 9730      	SBIW R30,0
00043b 4060      	SBCI R22,0
00043c 4070      	SBCI R23,0
00043d f0b1      	BREQ __CDF10
00043e 2400      	CLR  R0
00043f f026      	BRTS __CDF11
000440 2377      	TST  R23
000441 f412      	BRPL __CDF11
000442 9400      	COM  R0
000443 d137      	RCALL __ANEGD1
                 __CDF11:
000444 2e17      	MOV  R1,R23
000445 e17e      	LDI  R23,30
000446 2011      	TST  R1
                 __CDF12:
000447 f032      	BRMI __CDF13
000448 957a      	DEC  R23
000449 0fee      	LSL  R30
00044a 1fff      	ROL  R31
00044b 1f66      	ROL  R22
00044c 1c11      	ROL  R1
00044d cff9      	RJMP __CDF12
                 __CDF13:
00044e 2fef      	MOV  R30,R31
00044f 2ff6      	MOV  R31,R22
000450 2d61      	MOV  R22,R1
000451 935f      	PUSH R21
000452 df8a      	RCALL __REPACK
000453 915f      	POP  R21
                 __CDF10:
000454 9508      	RET
                 
                 __SWAPACC:
000455 934f      	PUSH R20
000456 01af      	MOVW R20,R30
000457 01fd      	MOVW R30,R26
000458 01da      	MOVW R26,R20
000459 01ab      	MOVW R20,R22
00045a 01bc      	MOVW R22,R24
00045b 01ca      	MOVW R24,R20
00045c 2d40      	MOV  R20,R0
00045d 2c01      	MOV  R0,R1
00045e 2e14      	MOV  R1,R20
00045f 914f      	POP  R20
000460 9508      	RET
                 
                 __UADD12:
000461 0fea      	ADD  R30,R26
000462 1ffb      	ADC  R31,R27
000463 1f68      	ADC  R22,R24
000464 9508      	RET
                 
                 __NEGMAN1:
000465 95e0      	COM  R30
000466 95f0      	COM  R31
000467 9560      	COM  R22
000468 5fef      	SUBI R30,-1
000469 4fff      	SBCI R31,-1
00046a 4f6f      	SBCI R22,-1
00046b 9508      	RET
                 
                 __SUBF12:
00046c 935f      	PUSH R21
00046d df81      	RCALL __UNPACK
00046e 3890      	CPI  R25,0x80
00046f f171      	BREQ __ADDF129
000470 e850      	LDI  R21,0x80
000471 2615      	EOR  R1,R21
                 
000472 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000473 935f      	PUSH R21
000474 df7a      	RCALL __UNPACK
000475 3890      	CPI  R25,0x80
000476 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000477 3870      	CPI  R23,0x80
000478 f121      	BREQ __ADDF128
                 __ADDF121:
000479 2f57      	MOV  R21,R23
00047a 1b59      	SUB  R21,R25
00047b f12b      	BRVS __ADDF1211
00047c f412      	BRPL __ADDF122
00047d dfd7      	RCALL __SWAPACC
00047e cffa      	RJMP __ADDF121
                 __ADDF122:
00047f 3158      	CPI  R21,24
000480 f018      	BRLO __ADDF123
000481 27aa      	CLR  R26
000482 27bb      	CLR  R27
000483 2788      	CLR  R24
                 __ADDF123:
000484 3058      	CPI  R21,8
000485 f028      	BRLO __ADDF124
000486 2fab      	MOV  R26,R27
000487 2fb8      	MOV  R27,R24
000488 2788      	CLR  R24
000489 5058      	SUBI R21,8
00048a cff9      	RJMP __ADDF123
                 __ADDF124:
00048b 2355      	TST  R21
00048c f029      	BREQ __ADDF126
                 __ADDF125:
00048d 9586      	LSR  R24
00048e 95b7      	ROR  R27
00048f 95a7      	ROR  R26
000490 955a      	DEC  R21
000491 f7d9      	BRNE __ADDF125
                 __ADDF126:
000492 2d50      	MOV  R21,R0
000493 2551      	EOR  R21,R1
000494 f072      	BRMI __ADDF127
000495 dfcb      	RCALL __UADD12
000496 f438      	BRCC __ADDF129
000497 9567      	ROR  R22
000498 95f7      	ROR  R31
000499 95e7      	ROR  R30
00049a 9573      	INC  R23
00049b f413      	BRVC __ADDF129
00049c c020      	RJMP __MAXRES
                 __ADDF128:
00049d dfb7      	RCALL __SWAPACC
                 __ADDF129:
00049e df3e      	RCALL __REPACK
00049f 915f      	POP  R21
0004a0 9508      	RET
                 __ADDF1211:
0004a1 f7d8      	BRCC __ADDF128
0004a2 cffb      	RJMP __ADDF129
                 __ADDF127:
0004a3 1bea      	SUB  R30,R26
0004a4 0bfb      	SBC  R31,R27
0004a5 0b68      	SBC  R22,R24
0004a6 f051      	BREQ __ZERORES
0004a7 f410      	BRCC __ADDF1210
0004a8 9400      	COM  R0
0004a9 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0004aa 2366      	TST  R22
0004ab f392      	BRMI __ADDF129
0004ac 0fee      	LSL  R30
0004ad 1fff      	ROL  R31
0004ae 1f66      	ROL  R22
0004af 957a      	DEC  R23
0004b0 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0004b1 27ee      	CLR  R30
0004b2 27ff      	CLR  R31
0004b3 2766      	CLR  R22
0004b4 2777      	CLR  R23
0004b5 915f      	POP  R21
0004b6 9508      	RET
                 
                 __MINRES:
0004b7 efef      	SER  R30
0004b8 efff      	SER  R31
0004b9 e76f      	LDI  R22,0x7F
0004ba ef7f      	SER  R23
0004bb 915f      	POP  R21
0004bc 9508      	RET
                 
                 __MAXRES:
0004bd efef      	SER  R30
0004be efff      	SER  R31
0004bf e76f      	LDI  R22,0x7F
0004c0 e77f      	LDI  R23,0x7F
0004c1 915f      	POP  R21
0004c2 9508      	RET
                 
                 __MULF12:
0004c3 935f      	PUSH R21
0004c4 df2a      	RCALL __UNPACK
0004c5 3870      	CPI  R23,0x80
0004c6 f351      	BREQ __ZERORES
0004c7 3890      	CPI  R25,0x80
0004c8 f341      	BREQ __ZERORES
0004c9 2401      	EOR  R0,R1
0004ca 9408      	SEC
0004cb 1f79      	ADC  R23,R25
0004cc f423      	BRVC __MULF124
0004cd f31c      	BRLT __ZERORES
                 __MULF125:
0004ce 2000      	TST  R0
0004cf f33a      	BRMI __MINRES
0004d0 cfec      	RJMP __MAXRES
                 __MULF124:
0004d1 920f      	PUSH R0
0004d2 931f      	PUSH R17
0004d3 932f      	PUSH R18
0004d4 933f      	PUSH R19
0004d5 934f      	PUSH R20
0004d6 2711      	CLR  R17
0004d7 2722      	CLR  R18
0004d8 2799      	CLR  R25
0004d9 9f68      	MUL  R22,R24
0004da 01a0      	MOVW R20,R0
0004db 9f8f      	MUL  R24,R31
0004dc 2d30      	MOV  R19,R0
0004dd 0d41      	ADD  R20,R1
0004de 1f59      	ADC  R21,R25
0004df 9f6b      	MUL  R22,R27
0004e0 0d30      	ADD  R19,R0
0004e1 1d41      	ADC  R20,R1
0004e2 1f59      	ADC  R21,R25
0004e3 9f8e      	MUL  R24,R30
0004e4 d027      	RCALL __MULF126
0004e5 9fbf      	MUL  R27,R31
0004e6 d025      	RCALL __MULF126
0004e7 9f6a      	MUL  R22,R26
0004e8 d023      	RCALL __MULF126
0004e9 9fbe      	MUL  R27,R30
0004ea d01d      	RCALL __MULF127
0004eb 9faf      	MUL  R26,R31
0004ec d01b      	RCALL __MULF127
0004ed 9fae      	MUL  R26,R30
0004ee 0d11      	ADD  R17,R1
0004ef 1f29      	ADC  R18,R25
0004f0 1f39      	ADC  R19,R25
0004f1 1f49      	ADC  R20,R25
0004f2 1f59      	ADC  R21,R25
0004f3 2fe3      	MOV  R30,R19
0004f4 2ff4      	MOV  R31,R20
0004f5 2f65      	MOV  R22,R21
0004f6 2f52      	MOV  R21,R18
0004f7 914f      	POP  R20
0004f8 913f      	POP  R19
0004f9 912f      	POP  R18
0004fa 911f      	POP  R17
0004fb 900f      	POP  R0
0004fc 2366      	TST  R22
0004fd f02a      	BRMI __MULF122
0004fe 0f55      	LSL  R21
0004ff 1fee      	ROL  R30
000500 1fff      	ROL  R31
000501 1f66      	ROL  R22
000502 c002      	RJMP __MULF123
                 __MULF122:
000503 9573      	INC  R23
000504 f24b      	BRVS __MULF125
                 __MULF123:
000505 decd      	RCALL __ROUND_REPACK
000506 915f      	POP  R21
000507 9508      	RET
                 
                 __MULF127:
000508 0d10      	ADD  R17,R0
000509 1d21      	ADC  R18,R1
00050a 1f39      	ADC  R19,R25
00050b c002      	RJMP __MULF128
                 __MULF126:
00050c 0d20      	ADD  R18,R0
00050d 1d31      	ADC  R19,R1
                 __MULF128:
00050e 1f49      	ADC  R20,R25
00050f 1f59      	ADC  R21,R25
000510 9508      	RET
                 
                 __DIVF21:
000511 935f      	PUSH R21
000512 dedc      	RCALL __UNPACK
000513 3870      	CPI  R23,0x80
000514 f421      	BRNE __DIVF210
000515 2011      	TST  R1
                 __DIVF211:
000516 f40a      	BRPL __DIVF219
000517 cf9f      	RJMP __MINRES
                 __DIVF219:
000518 cfa4      	RJMP __MAXRES
                 __DIVF210:
000519 3890      	CPI  R25,0x80
00051a f409      	BRNE __DIVF218
                 __DIVF217:
00051b cf95      	RJMP __ZERORES
                 __DIVF218:
00051c 2401      	EOR  R0,R1
00051d 9408      	SEC
00051e 0b97      	SBC  R25,R23
00051f f41b      	BRVC __DIVF216
000520 f3d4      	BRLT __DIVF217
000521 2000      	TST  R0
000522 cff3      	RJMP __DIVF211
                 __DIVF216:
000523 2f79      	MOV  R23,R25
000524 931f      	PUSH R17
000525 932f      	PUSH R18
000526 933f      	PUSH R19
000527 934f      	PUSH R20
000528 2411      	CLR  R1
000529 2711      	CLR  R17
00052a 2722      	CLR  R18
00052b 2733      	CLR  R19
00052c 2744      	CLR  R20
00052d 2755      	CLR  R21
00052e e290      	LDI  R25,32
                 __DIVF212:
00052f 17ae      	CP   R26,R30
000530 07bf      	CPC  R27,R31
000531 0786      	CPC  R24,R22
000532 0741      	CPC  R20,R17
000533 f030      	BRLO __DIVF213
000534 1bae      	SUB  R26,R30
000535 0bbf      	SBC  R27,R31
000536 0b86      	SBC  R24,R22
000537 0b41      	SBC  R20,R17
000538 9408      	SEC
000539 c001      	RJMP __DIVF214
                 __DIVF213:
00053a 9488      	CLC
                 __DIVF214:
00053b 1f55      	ROL  R21
00053c 1f22      	ROL  R18
00053d 1f33      	ROL  R19
00053e 1c11      	ROL  R1
00053f 1faa      	ROL  R26
000540 1fbb      	ROL  R27
000541 1f88      	ROL  R24
000542 1f44      	ROL  R20
000543 959a      	DEC  R25
000544 f751      	BRNE __DIVF212
000545 01f9      	MOVW R30,R18
000546 2d61      	MOV  R22,R1
000547 914f      	POP  R20
000548 913f      	POP  R19
000549 912f      	POP  R18
00054a 911f      	POP  R17
00054b 2366      	TST  R22
00054c f032      	BRMI __DIVF215
00054d 0f55      	LSL  R21
00054e 1fee      	ROL  R30
00054f 1fff      	ROL  R31
000550 1f66      	ROL  R22
000551 957a      	DEC  R23
000552 f243      	BRVS __DIVF217
                 __DIVF215:
000553 de7f      	RCALL __ROUND_REPACK
000554 915f      	POP  R21
000555 9508      	RET
                 
                 __CMPF12:
000556 2399      	TST  R25
000557 f09a      	BRMI __CMPF120
000558 2377      	TST  R23
000559 f042      	BRMI __CMPF121
00055a 1797      	CP   R25,R23
00055b f048      	BRLO __CMPF122
00055c f429      	BRNE __CMPF121
00055d 17ae      	CP   R26,R30
00055e 07bf      	CPC  R27,R31
00055f 0786      	CPC  R24,R22
000560 f020      	BRLO __CMPF122
000561 f031      	BREQ __CMPF123
                 __CMPF121:
000562 9498      	CLZ
000563 9488      	CLC
000564 9508      	RET
                 __CMPF122:
000565 9498      	CLZ
000566 9408      	SEC
000567 9508      	RET
                 __CMPF123:
000568 9418      	SEZ
000569 9488      	CLC
00056a 9508      	RET
                 __CMPF120:
00056b 2377      	TST  R23
00056c f7c2      	BRPL __CMPF122
00056d 1797      	CP   R25,R23
00056e f398      	BRLO __CMPF121
00056f f7a9      	BRNE __CMPF122
000570 17ea      	CP   R30,R26
000571 07fb      	CPC  R31,R27
000572 0768      	CPC  R22,R24
000573 f388      	BRLO __CMPF122
000574 f399      	BREQ __CMPF123
000575 cfec      	RJMP __CMPF121
                 
                 __ADDD12:
000576 0fea      	ADD  R30,R26
000577 1ffb      	ADC  R31,R27
000578 1f68      	ADC  R22,R24
000579 1f79      	ADC  R23,R25
00057a 9508      	RET
                 
                 __ANEGD1:
00057b 95f0      	COM  R31
00057c 9560      	COM  R22
00057d 9570      	COM  R23
00057e 95e1      	NEG  R30
00057f 4fff      	SBCI R31,-1
000580 4f6f      	SBCI R22,-1
000581 4f7f      	SBCI R23,-1
000582 9508      	RET
                 
                 __CWD1:
000583 2f6f      	MOV  R22,R31
000584 0f66      	ADD  R22,R22
000585 0b66      	SBC  R22,R22
000586 2f76      	MOV  R23,R22
000587 9508      	RET
                 
                 __GETD1S0:
000588 81e8      	LD   R30,Y
000589 81f9      	LDD  R31,Y+1
00058a 816a      	LDD  R22,Y+2
00058b 817b      	LDD  R23,Y+3
00058c 9508      	RET
                 
                 __PUTD1S0:
00058d 83e8      	ST   Y,R30
00058e 83f9      	STD  Y+1,R31
00058f 836a      	STD  Y+2,R22
000590 837b      	STD  Y+3,R23
000591 9508      	RET
                 
                 __PUTPARD1:
000592 937a      	ST   -Y,R23
000593 936a      	ST   -Y,R22
000594 93fa      	ST   -Y,R31
000595 93ea      	ST   -Y,R30
000596 9508      	RET
                 
                 __SWAPD12:
000597 2e18      	MOV  R1,R24
000598 2f86      	MOV  R24,R22
000599 2d61      	MOV  R22,R1
00059a 2e19      	MOV  R1,R25
00059b 2f97      	MOV  R25,R23
00059c 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00059d 2e1b      	MOV  R1,R27
00059e 2fbf      	MOV  R27,R31
00059f 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0005a0 2e1a      	MOV  R1,R26
0005a1 2fae      	MOV  R26,R30
0005a2 2de1      	MOV  R30,R1
0005a3 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  31 r1 :  32 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:  10 r17:  27 r18:  12 r19:  12 r20:  22 r21:  63 r22:  90 r23:  73 
r24:  52 r25:  53 r26:  91 r27:  49 r28:  13 r29:   1 r30: 250 r31:  99 
x  :  17 y  : 171 z  :   9 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  10 
adiw  :  15 and   :   5 andi  :   9 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   1 break :   0 breq  :  23 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   2 brmi  :   9 brne  :  23 brpl  :   9 brsh  :   1 brtc  :   2 
brts  :   3 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  : 112 
cbi   :  11 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  38 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :  10 
cp    :   8 cpc   :  13 cpi   :  28 cpse  :   0 dec   :  10 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  17 inc   :   5 jmp   :  28 ld    :  43 ldd   :  56 ldi   : 122 
lds   :   2 lpm   :   8 lsl   :  12 lsr   :   3 mov   :  51 movw  :  26 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   4 out   :  29 pop   :  20 push  :  20 rcall :  41 ret   :  55 
reti  :   2 rjmp  :  45 rol   :  24 ror   :  15 sbc   :   8 sbci  :  10 
sbi   :   9 sbic  :   0 sbis  :   1 sbiw  :   9 sbr   :   2 sbrc  :   2 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  70 std   :  20 sts   :   6 sub   :   5 subi  :  15 swap  :   2 
tst   :  20 wdr   :   0 
Instructions used: 79 out of 116 (68.1%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000b48   2804     84   2888   16384  17.6%
[.dseg] 0x000060 0x000184      0     36     36    1119   3.2%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 5 warnings
