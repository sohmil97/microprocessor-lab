;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#asm
;PCODE: $0000000D VOL: 0
  .equ __lcd_port= 0x1B;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0004 #endasm
;
;#include <lcd.h>
;#include <stdlib.h>
;#define ICP_EN PINC.0
;
;static int alpha_pointer = -1;

	.DSEG
;
;static unsigned int timer1_counter = 0;
;const unsigned long TIMER1_VALUE = 0xE0C0;
;
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0010 {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0011     TCNT1=TIMER1_VALUE;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0012     ++timer1_counter;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0013 }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;interrupt [TIM1_CAPT] void timer1_capt_isr(void)
; 0000 0016 {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0017     char str_period[10];
; 0000 0018     char str_freq[10];
; 0000 0019     unsigned long period;
; 0000 001A     unsigned int lcr1;
; 0000 001B 
; 0000 001C     lcr1 = (ICR1H*256)+ICR1L;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;	str_period -> Y+16
;	str_freq -> Y+6
;	period -> Y+2
;	lcr1 -> R16,R17
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001D     period = ((unsigned long)(((float)lcr1)/((float)(0xffff-TIMER1_VALUE))))
; 0000 001E             + ((unsigned long) timer1_counter) ;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 001F 
; 0000 0020 
; 0000 0021     timer1_counter = 0;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0022     TCNT1=TIMER1_VALUE;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0023 
; 0000 0024     itoa(period,str_period);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0025     ftoa(1/((float)period/1000),3,str_freq);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0026 
; 0000 0027     lcd_clear();
;PCODE: $00000048 VOL: 0
; 0000 0028     lcd_puts("Period: ");
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0029     lcd_puts(str_period);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 002A     lcd_puts(" ms");
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 002B     lcd_gotoxy(0,1);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 002C     lcd_puts("Freq: ");
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 002D     lcd_puts(str_freq);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 002E     lcd_puts(" Hz");
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 002F }
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0

	.DSEG
_0x4:
	.BYTE 0x18
;
;
;void main(void)
; 0000 0033 {

	.CSEG
;PCODE: $0000006C VOL: 0
; 0000 0034 
; 0000 0035 DDRA= 0xFF;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0036 DDRC= 0xF0;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0037 PORTC.7 = 0;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0038 
; 0000 0039 TCCR1A= 0;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 003A TCCR1B=(1<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 003B TCNT1=TIMER1_VALUE;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 003C ICR1H=0x00;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 003D ICR1L=0x00;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 003E 
; 0000 003F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (1<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0040 
; 0000 0041 lcd_init(16);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0042 
; 0000 0043 #asm("sei");
;PCODE: $00000082 VOL: 0
	sei
;PCODE: $00000083 VOL: 0
; 0000 0044 
; 0000 0045 while (1){
;PCODE: $00000084 VOL: 0
; 0000 0046  if (ICP_EN){
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0047      TIMSK |= (1<<TICIE1) | (1<<TOIE1);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0048      TIMSK &= ~(1<<TOIE0);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0049      alpha_pointer = -1;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 004A  } else {
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 004B      TIMSK &= ~(1<<TICIE1);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 004C      TIMSK &= ~(1<<TOIE1);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 004D      TIMSK |= (1<<TOIE0);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 004E  }
;PCODE: $0000009B VOL: 0
; 0000 004F }
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0050 }
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
