;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;bit flag=0;
;int states[4] = {0b00001001 , 0b000001010 , 0b00000110 , 0b00000101};

	.DSEG
;int currentPosition=0;
;int TimerOverFlowCounter =0;
;int n=50 ;
;int goingFast=1;
;int counter;
;int delay;
;int max_delay;
;int min_delay;
;int timerStarted;
;int direction;
;
;int currentState;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0013 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0014 
; 0000 0015   TCNT0=0x0C;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0016 
; 0000 0017     if(timerStarted==1) {
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0018 
; 0000 0019         if(counter>=delay) {
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 001A             PORTA = states[currentPosition] ;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001B 
; 0000 001C             if(currentPosition<3) {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001D                 ++currentPosition;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001E             } else {
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001F                 currentPosition=0;
;PCODE: $00000025 VOL: 0
; 0000 0020             }
;PCODE: $00000026 VOL: 0
; 0000 0021 
; 0000 0022             if(direction<0) {
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0023                 if(delay>min_delay) {
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0024                     delay--;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0025                 } else {
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0026                     direction = 1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0027                 }
;PCODE: $00000036 VOL: 0
; 0000 0028             } else {
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0029                 if(delay<max_delay) {
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002A                     delay++;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 002B                 } else {
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002C                     direction = -1;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 002D                     timerStarted=0;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002E                 }
;PCODE: $00000047 VOL: 0
; 0000 002F             }
;PCODE: $00000048 VOL: 0
; 0000 0030 
; 0000 0031             counter = 0;
;PCODE: $00000049 VOL: 0
; 0000 0032         }
; 0000 0033 
; 0000 0034         counter++;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0035     }
; 0000 0036 
; 0000 0037 
; 0000 0038 }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;
;void main(void)
; 0000 003B {
;PCODE: $00000052 VOL: 0
; 0000 003C 
; 0000 003D DDRA=0xff;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 003E PORTA=0x00;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 003F 
; 0000 0040 DDRC=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0041 PINC=0x00;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0042    currentState = 0;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0043     timerStarted = 1;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0044     direction = -1;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0045     max_delay = 350;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0046     min_delay = -350;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0047     delay = max_delay;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0048     counter = 0;
;PCODE: $00000067 VOL: 0
; 0000 0049 
; 0000 004A TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004B TCNT0 = 255;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 004C OCR0=0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 004D 
; 0000 004E // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 004F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0050   #asm("sei")
;PCODE: $00000070 VOL: 0
	sei
;PCODE: $00000071 VOL: 0
; 0000 0051 while (1)
;PCODE: $00000072 VOL: 0
; 0000 0052       {
; 0000 0053         if(PINC.2==0 &&  timerStarted==0) {
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0054                  delay = max_delay;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0055                  counter = 0;
;PCODE: $00000080 VOL: 0
; 0000 0056                  direction = -1;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0057                  timerStarted=1;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0058             }
; 0000 0059         }
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 005A }
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
