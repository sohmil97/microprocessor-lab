;/*****************************************************
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 12.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#define led PORTA.0
;
;unsigned char c;
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void){
; 0000 0010 interrupt [10] void timer0_ovf_isr(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0011     TCNT0=0x16;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0012     c++;
;PCODE: $00000011 VOL: 0
; 0000 0013 }
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;
;void main(void){
; 0000 0015 void main(void){
;PCODE: $00000015 VOL: 0
; 0000 0016     DDRA=0xff;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0017 
; 0000 0018     TCCR0=0x05;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0019     TCNT0=0x16;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001A     OCR0=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001B 
; 0000 001C     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 001D     TIMSK=0x01;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001E 
; 0000 001F     // Global enable interrupts
; 0000 0020     #asm("sei")
;PCODE: $00000020 VOL: 0
	sei
;PCODE: $00000021 VOL: 0
; 0000 0021 
; 0000 0022     while (1){
;PCODE: $00000022 VOL: 0
; 0000 0023         if(c>=25) {
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0024             led=~led;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0025             c=0;
;PCODE: $00000030 VOL: 0
; 0000 0026         }
; 0000 0027     }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0028 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;
;/*
;  1:    12000000/1024=11718.75Hz
;  2:    1/11718.75=85.3us
;  3:    85.3us*234=19960.22us ==> TCNT0=(256-234)=22
;  4:    1sec=1000ms ==> 1000000/19960.22us=50 ==> if(c>=250)
;*/
